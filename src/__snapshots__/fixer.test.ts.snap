// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`fix > model-map 1`] = `
"datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Users {
  id        Int          @id @default(autoincrement())
  createdAt DateTime     @default(now())
  email     String       @unique
  role      Role         @default(USER)
  posts     Post[]
  profile   UserProfile?

  @@map("users")
}

model userProfile {
  id     Int     @id @default(autoincrement())
  name   String?
  bio    String?
  user   User    @relation(fields: [userId], references: [id])
  userId Int     @unique

  @@map("user_profiles")
}

model post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  published Boolean  @default(false)
  title     String   @db.VarChar(255)
  author    User?    @relation(fields: [authorId], references: [id])
  authorId  Int?

  @@map("posts")
}

enum Role {
  USER
  ADMIN
}
"
`;

exports[`fix > model-name 1`] = `
"datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int          @id @default(autoincrement())
  createdAt DateTime     @default(now())
  email     String       @unique
  role      Role         @default(USER)
  posts     Post[]
  profile   UserProfile?
}

model UserProfile {
  id     Int     @id @default(autoincrement())
  name   String?
  bio    String?
  user   User    @relation(fields: [userId], references: [id])
  userId Int     @unique
}

model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  published Boolean  @default(false)
  title     String   @db.VarChar(255)
  author    User?    @relation(fields: [authorId], references: [id])
  authorId  Int?
}

enum Role {
  USER
  ADMIN
}
"
`;
